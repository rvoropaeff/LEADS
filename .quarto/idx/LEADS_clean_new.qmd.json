{"title":"LEADS bivariate analysis - Mentorship","markdown":{"yaml":{"title":"LEADS bivariate analysis - Mentorship","author":"Rebecca Voropaeff","format":"html"},"headingText":"Define a vector of specific question variables","containsRefs":false,"markdown":"\n\n```{r, echo = FALSE}\nALL_data <- read.csv(\"C:/Users/REV47/OneDrive - University of Pittsburgh/Desktop/LEADS Reports/LEADS_all csv.csv\")\n\n```\n\n```{r, echo = FALSE}\n###assign factors\nALL_data$Cohort <- as.factor(ALL_data$Cohort)\n\n```\n\n```{r, echo = FALSE}\n###assign factors\nALL_data$surveytype <- as.factor(ALL_data$surveytype)\n```\n\n```{r, echo = FALSE}\n###assign factors\nALL_data$Question <- as.factor(ALL_data$Question)\n\n```\n\n```{r, echo = FALSE}\n###assign factors\nALL_data$Category <- as.factor(ALL_data$Category)\n```\n\n```{r, echo=FALSE, results='hide'}\n###summary table\nsummary(ALL_data)\n```\n\n```{r, echo =FALSE}\n###convert all columns within df to appropriate data types\nALL_data$SurveyId <- as.factor(ALL_data$SurveyId)\nALL_data$UserId <- as.factor(ALL_data$UserId)\nALL_data$Cohort <- as.factor(ALL_data$Cohort)\nALL_data$SurveyYear <- as.integer(ALL_data$SurveyYear)  \nALL_data$surveytype <- as.factor(ALL_data$surveytype)\nALL_data$Question <- as.character(ALL_data$Question)\nALL_data$Score <- as.numeric(ALL_data$Score)  \nALL_data$Category <- as.factor(ALL_data$Category)\n```\n\n```{r, echo=FALSE}\n###get variable titles\nunique_question_variables <- unique(ALL_data$Question)\n\n\n```\n\n```{r, echo=FALSE, results='hide'}\n#Count occurrences of each question type\nquestion_counts <- table(ALL_data$Question)\n```\n\n```{r, echo=FALSE}\n###assign specific order to surveytype\nALL_data$surveytype <- factor(ALL_data$surveytype, levels = c(\"Baseline\", \"Exit\", \"Alumni\"))\n```\n\n```{r, echo=FALSE}\n###assign specific order to categories\nALL_data$Category <- factor(ALL_data$Category, levels = c(\"burnout\", \"creativity\", \"motivation\", \"passion_and_interest\", \"leadership\", \"rsi\", \"professionalism\", \"research_experience\", \"mentoring\", \"resources\", \"networking\", \"job_satisfaction\", \"career_satisfaction\", \"caa\"))\n```\n\n```{r, echo=FALSE}\nlibrary(stringr)\n\n```\n\n```{r, echo=FALSE}\nwrap_cat <- function(text, width = 80) \n  {wrapped_text <- str_wrap(text, width)\n  cat(wrapped_text, \"\\n\")}\n\n```\n\n```{r, echo=FALSE}\n\nwrap_cat(\"This report observes the potentail impact of mentorship on success factors for LEADS scholars. The outcome X variable of success factors will be compaired against the Y variables 'priaccess' or 'My primary mentor of mentoring team is accessible', and 'prioverall' or 'Please rate the overall effectiveness of your primary mentor.' The data is unaggregated.\")\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n```\n\n```{r, echo=FALSE}\nwrap_cat(\"The LEADS survey has been broken down into subscales that will be assessed in the following order:\")\n    \n   cat(\"\n    Burnout\n    Creativity\n    Motivation\n    Passion and Interests\n    Leadership\n    Research Skills Inventory\n    Professionalism\n    Research Experience\n    Networking/Socail Capital\n    Job Satisfaction\n    Career Satisfaction\n    Career Adapt-Abilities Inventory\")\n```\n\n```{r, echo=FALSE, results='hide'}\nsuppressPackageStartupMessages(library(dplyr))\n\nlibrary(dplyr)\n###Create a descriptive table for the burnout category grouped by SurveyType\nburnout_summary <- ALL_data %>%\n  filter(Category == \"burnout\") %>%\n  group_by(surveytype) %>%  \n  summarise(\n    Count = n(),\n    Mean = mean(Score, na.rm = TRUE),\n    Median = median(Score, na.rm = TRUE),\n    SD = sd(Score, na.rm = TRUE),\n    Min = min(Score, na.rm = TRUE),\n    Max = max(Score, na.rm = TRUE),\n      .groups = 'drop'  # To avoid a grouped data frame output\n  )\n\nprint(burnout_summary)\n\n```\n\n```{r, echo=FALSE}\n\nlibrary(knitr)\n\n```\n\n```{r, echo=FALSE}\nquestion_variables <- c(\"activerole\", \"actoninfo\", \"adaptability\", \"agencies\", \"arguments\", \"assembleTeam\", \"assistcolleague\", \"avoidoffensive\", \"awareChoices\", \"beliefs\", \"buildcomm\", \"buildplan\", \"burnout\", \"careerConcern\", \"coaching\",  \"communications\", \"compensation\", \"compsupervisor\", \"countOnSelf\", \"creative\", \"creativeperson\", \"criticism\", \"critiques\", \"curious\", \"dataManager\", \"deepProbing\", \"diffangles\", \"differentWays\", \"direction\", \"discloseCOI\", \"doThingsWell\", \"dynamics\", \"efficient\", \"finer\", \"finish\", \"followupplan\", \"grantStages\",\"grantWriter\", \"hypothesis\", \"influenced\", \"jobmeaningful\", \"launch\", \"learnSkills\", \"likecoworkers\", \"listen\", \"lookToGrow\", \"manageTeam\", \"mentorExpertise\", \"newdistract\", \"newskills\", \"notblocked\", \"notdiscouraged\", \"optionsPrechoice\", \"overcome\", \"paidfair\", \"peerReviewer\", \"planToAchieve\", \"prepareFuture\", \"priaccess\", \"pricareerresp\", \"pricritiq\", \"prilife\", \"primotiv\", \n\"prioverall\", \"priprof\", \"priskills\", \"prisuggestinfl\", \"recognition\", \"reschange\", \"researchAdmin\", \"respect\", \"responsible\", \"rightForSelf\", \"sections\", \"secureMore\", \"selfDecisions\", \"shapeFuture\", \"showtrust\", \"sofield\", \"solveProblems\", \"soother\", \"sopitt\", \"statistician\", \"submitGrant\", \"surroundings\", \"theoretical\", \n\"thinkFuture\", \"timeline\", \"truthful\", \"upbeat\", \"wkbetter\", \"wkcomplex\", \"wkdiffic\", \"wkenjoy\", \"wkincome\", \"wkmostej\", \"wkothfind\", \"wkprom\", \"wkrecogn\", \n\"wktackl\", \"workingUp\", \"writeAbstract\", \"writeMOP\", \"writePaper\") \n```\n\n```{r, echo=FALSE, message=FALSE, fig.show='hide'}\nlibrary(ggplot2)\nlibrary(dplyr)\n\ncreate_scatter_plot_mean <- function(x_question, y_question) {\n  # Check for questions in the dataframe\n  if (!(x_question %in% ALL_data$Question)) stop(\"X-axis question not found.\")\n  if (!(y_question %in% ALL_data$Question)) stop(\"Y-axis question not found.\")\n  \n  # Prepare data\n  x_data <- ALL_data %>% \n    filter(Question == x_question) %>% \n    select(SurveyId, UserId, surveytype, Score) %>% \n    rename(Score_x = Score)\n\n  y_data <- ALL_data %>% \n    filter(Question == y_question) %>% \n    select(SurveyId, UserId, Score) %>% \n    rename(Score_y = Score)\n  \n  # Join data on SurveyId and UserId\n  plot_data <- inner_join(x_data, y_data, by = c(\"SurveyId\", \"UserId\")) \n  \n  # Calculate mean of Score_x and count by surveytype and Score_y\n  plot_counts <- plot_data %>%\n    group_by(surveytype, Score_y) %>%\n    summarise(Mean_x = mean(Score_x, na.rm = TRUE), \n              Count = n(), \n              .groups = 'drop')  # Count occurrences\n\n  # Filter out rows with NA values in Mean_x or Score_y\n  plot_counts <- plot_counts %>%\n    filter(!is.na(Mean_x) & !is.na(Score_y))\n\n  # Define nudge distances\n  nudge_x <- 0.15  # Horizontal spacing\n  nudge_y <- 0.1   # Vertical spacing\n  \n  # Create scatter plot with nudge to maintain symmetry\n  plot <- suppressWarnings({\n    ggplot(plot_counts, aes(x = Mean_x, y = Score_y, color = surveytype)) +\n      geom_point(aes(size = Count), alpha = 0.5, \n                 position = position_nudge(x = nudge_x, y = nudge_y), na.rm = TRUE) +  # Nudge for spacing\n      labs(title = paste(\"Scatter Plot of\", x_question, \"Mean vs\", y_question, \"Raw Scores by Survey Type\"),\n           x = paste(\"Mean of\", x_question),\n           y = y_question,\n           size = \"Count\") +  # Label for size legend\n      theme_minimal()\n  })\n\n  print(plot)\n  \n  # Optionally save the plot, suppressing messages\n  suppressMessages({\n    ggsave(filename = paste0(x_question, \"_vs_\", y_question, \"_scatter_plot_by_surveytype.png\"), plot = plot)\n  })\n}\n\n# Example usage\ncreate_scatter_plot_mean(\"burnout\", \"priaccess\")\n\n\n```\n\n```{r, echo=FALSE}\ncat(\"Burnout\")\n\n```\n\n```{r, echo=FALSE, results='hide'}\nkable(burnout_summary)\n```\n\n```{r, echo=FALSE, results='hide'}\nlibrary(ggplot2)\nlibrary(dplyr)\n\ncreate_scatter_plot_raw <- function(x_question, y_question) {\n  # Check for questions in the dataframe\n  if (!(x_question %in% ALL_data$Question)) stop(\"X-axis question not found.\")\n  if (!(y_question %in% ALL_data$Question)) stop(\"Y-axis question not found.\")\n  \n  # Prepare data for x_question\n  x_data <- ALL_data %>% \n    filter(Question == x_question) %>% \n    select(SurveyId, UserId, surveytype, Score) %>% \n    rename(Score_x = Score)\n\n  # Prepare data for y_question\n  y_data <- ALL_data %>% \n    filter(Question == y_question) %>% \n    select(SurveyId, UserId, Score) %>% \n    rename(Score_y = Score)\n\n  # Join data on SurveyId and UserId\n  plot_data <- inner_join(x_data, y_data, by = c(\"SurveyId\", \"UserId\")) \n  \n  # Filter out rows with NA values\n  plot_data <- plot_data %>% filter(!is.na(Score_x) & !is.na(Score_y))\n\n  # Calculate counts for each combination of raw scores\n  plot_counts <- plot_data %>%\n    group_by(surveytype, Score_x, Score_y) %>%\n    summarise(Count = n(), .groups = 'drop')  # Count occurrences\n  \n  # Remove rows with zero counts to avoid warnings\n  plot_counts <- plot_counts %>%\n    filter(Count > 0)\n\n  # Create scatter plot with jitter to avoid overlap\n  plot <- suppressWarnings({\n    ggplot(plot_counts, aes(x = Score_x, y = Score_y, color = surveytype)) +\n      geom_jitter(aes(size = Count), width = 0.1, height = 0.3, alpha = 0.5, na.rm = TRUE) +  # Use jitter for points\n      labs(title = paste( x_question, \"vs\", y_question),\n           x = paste( x_question),\n           y = paste(y_question),\n           size = \"Count\") +  # Label for size legend\n      theme_minimal() +\n      theme(legend.position = \"right\")  # Adjust legend position as needed\n  })\n\n  # Print the plot\n  suppressWarnings(print(plot))\n  \n  # Optionally save the plot, suppressing messages\n  suppressMessages({\n    ggsave(filename = paste0(x_question, \"_vs_\", y_question, \"_scatter_plot_by_surveytype.png\"), plot = plot)\n  })\n}\n\n\n```\n\n```{r, echo=FALSE, fig.show='hide', results='hide', message=FALSE, warning=FALSE}\nlibrary(ggplot2)\nlibrary(dplyr)\n\ncreate_scatter_plot_all <- function(x_question, y_question) {\n  # Check for questions in the dataframe\n  if (!(x_question %in% ALL_data$Question)) stop(\"X-axis question not found.\")\n  if (!(y_question %in% ALL_data$Question)) stop(\"Y-axis question not found.\")\n  \n  # Prepare data for x_question\n  x_data <- ALL_data %>% \n    filter(Question == x_question) %>% \n    select(SurveyId, UserId, Score) %>% \n    rename(Score_x = Score)\n\n  # Prepare data for y_question\n  y_data <- ALL_data %>% \n    filter(Question == y_question) %>% \n    select(SurveyId, UserId, Score) %>% \n    rename(Score_y = Score)\n\n  # Join data on SurveyId and UserId\n  plot_data <- inner_join(x_data, y_data, by = c(\"SurveyId\", \"UserId\")) \n  \n  # Filter out rows with NA values\n  plot_data <- plot_data %>% filter(!is.na(Score_x) & !is.na(Score_y))\n\n  # Calculate counts for each combination of raw scores\n  plot_counts <- plot_data %>%\n    group_by(Score_x, Score_y) %>% \n    summarise(Count = n(), .groups = 'drop') \n  \n  # Remove rows with zero counts to avoid warnings\n  plot_counts <- plot_counts %>%\n    filter(Count > 0)\n\n  # Get n values\n  n_x <- nrow(x_data)\n  n_y <- nrow(y_data)\n\n  # Create scatter plot without jitter\n  plot <- ggplot(plot_counts, aes(x = Score_x, y = Score_y)) +  \n    geom_point(aes(size = Count), alpha = 0.3) +  # Use points instead of jitter\n    geom_text(aes(label = Count), hjust = -1.0, size = 3, color = \"black\") +  # Adjust position to the right\n    labs(title = paste(x_question, \"vs\", y_question, \"| n_x =\", n_x, \", n_y =\", n_y),\n         x = paste(x_question),\n         y = paste(y_question),\n         size = \"Count\") +  \n    theme_minimal() +\n    theme(legend.position = \"right\", plot.title = element_text(hjust = 0.7))  # Center the title\n\n  # Print the plot\n  print(plot)\n  \n  # Optionally save the plot\n  ggsave(filename = paste0(x_question, \"_vs_\", y_question, \"_scatter_plot.png\"), plot = plot)  \n}\n\n# Example usage\ncreate_scatter_plot_all(\"burnout\", \"priaccess\")\n\n```\n\n```{r, echo=FALSE}\n######create function scatter plot two all\nsuppressPackageStartupMessages({\n  library(ggplot2)\n  library(dplyr)\n  library(gridExtra)  # Load gridExtra for arranging plots\n  library(grid)       # Load grid for textGrob\n})\n\ncreate_scatter_plot_two_all <- function(x_question1, y_question1, x_question2, y_question2, \n                                         x_limits = c(1, 5), y_limits = c(1, 5),  # Add parameters for axis limits\n                                         main_title = \"\", title_size = 10, label_size = 8, text_label_size = 2.6) {\n  # Function to create a scatter plot\n  create_plot <- function(x_question, y_question, color) {\n    if (!(x_question %in% ALL_data$Question)) stop(\"X-axis question not found.\")\n    if (!(y_question %in% ALL_data$Question)) stop(\"Y-axis question not found.\")\n    \n    # Prepare data for x_question\n    x_data <- ALL_data %>% \n      filter(Question == x_question) %>% \n      select(SurveyId, UserId, Score) %>% \n      rename(Score_x = Score)\n\n    # Prepare data for y_question\n    y_data <- ALL_data %>% \n      filter(Question == y_question) %>% \n      select(SurveyId, UserId, Score) %>% \n      rename(Score_y = Score)\n\n    # Join data on SurveyId and UserId\n    plot_data <- inner_join(x_data, y_data, by = c(\"SurveyId\", \"UserId\")) \n    \n    # Filter out rows with NA values\n    plot_data <- plot_data %>% filter(!is.na(Score_x) & !is.na(Score_y))\n\n    # Calculate counts for each combination of raw scores\n    plot_counts <- plot_data %>%\n      group_by(Score_x, Score_y) %>% \n      summarise(Count = n(), .groups = 'drop') \n    \n    # Remove rows with zero counts to avoid warnings\n    plot_counts <- plot_counts %>%\n      filter(Count > 0)\n\n    # Get n values\n    n_x <- nrow(x_data)\n    n_y <- nrow(y_data)\n\n    # Create scatter plot without jitter for points, jittering only text labels\n    plot <- suppressWarnings({\n      ggplot(plot_counts, aes(x = Score_x, y = Score_y)) +  \n        geom_point(aes(size = Count), color = color, alpha = 0.2) +  # Set color based on argument\n        geom_text(aes(label = Count), \n                  position = position_jitter(width = 0.0, height = 0.0),  # Apply jitter to text labels\n                  size = text_label_size, color = \"black\") +  \n        labs(title = paste(x_question, \"vs\", y_question, \"\\n\", \n                           \"n_x =\", n_x, \", n_y =\", n_y),\n             x = paste(x_question),\n             y = paste(y_question),\n             size = \"Count\") +  \n        scale_size_continuous(limits = c(1, 100), range = c(1, 25), guide = \"none\") +  # Lock sizes\n        scale_x_continuous(limits = x_limits) +  # Set x-axis limits\n        scale_y_continuous(limits = y_limits) +  # Set y-axis limits\n        theme_minimal() +\n        theme(legend.position = \"right\", \n              plot.title = element_text(hjust = 0.5, size = title_size, lineheight = 0.8),\n              axis.text.x = element_text(size = label_size, face = \"bold\"),  # Bold x-axis numbers\n              axis.text.y = element_text(size = label_size, face = \"bold\"),  # Bold y-axis numbers\n              axis.title.x = element_text(size = label_size),  # Normal x-axis title\n              axis.title.y = element_text(size = label_size),  # Normal y-axis title\n              aspect.ratio = 1)  # Set aspect ratio to 1\n    })\n\n    return(plot)\n  }\n\n  # Create the two plots with specified colors\n  plot1 <- create_plot(x_question1, y_question1, color = \"blue\")\n  plot2 <- create_plot(x_question2, y_question2, color = \"black\")\n\n  # Arrange the plots side by side with adjusted heights for equal aspect ratio\n  grid.arrange(plot1, plot2, ncol = 2, \n               top = textGrob(main_title, gp = gpar(fontsize = 14, fontface = \"bold\")))  # Use main_title here\n}\n\n# Example usage with customizable main title and axis limits\ncreate_scatter_plot_two_all(\"burnout\", \"priaccess\", \"burnout\", \"prioverall\", \n                             x_limits = c(1, 5), y_limits = c(1, 5),\n                             main_title = \"I am experiencing symptoms of burnout.\")\n```\n\n```{r, echo=FALSE}\nwrap_cat(\"As priaccess scores are higher, burnout scores are lower. On this scale, a lower burnout score is positive.\")\n\n```\n\n```{r, echo=FALSE, fig.show='hide', warning=FALSE}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(gridExtra)  # Load gridExtra for arranging plots\n\ncreate_scatter_plot_both <- function(x_question, y_question, title_size = 14, axis_size = 12, legend_size = 10) {\n  # Check for questions in the dataframe\n  if (!(x_question %in% ALL_data$Question)) stop(\"X-axis question not found.\")\n  if (!(y_question %in% ALL_data$Question)) stop(\"Y-axis question not found.\")\n  \n  # Prepare data for x_question, including surveytype\n  x_data <- ALL_data %>% \n    filter(Question == x_question) %>% \n    select(SurveyId, UserId, surveytype, Score) %>% \n    rename(Score_x = Score)\n\n  # Prepare data for y_question, without surveytype\n  y_data <- ALL_data %>% \n    filter(Question == y_question) %>% \n    select(SurveyId, UserId, Score) %>% \n    rename(Score_y = Score)\n\n  # Join data on SurveyId and UserId\n  plot_data <- inner_join(x_data, y_data, by = c(\"SurveyId\", \"UserId\")) \n  \n  # Filter out rows with NA values\n  plot_data <- plot_data %>% filter(!is.na(Score_x) & !is.na(Score_y))\n\n  # Calculate counts for each combination of raw scores\n  plot_counts_surveytype <- plot_data %>%\n    group_by(surveytype, Score_x, Score_y) %>%\n    summarise(Count = n(), .groups = 'drop')  # Count occurrences\n\n  plot_counts_all <- plot_data %>%\n    group_by(Score_x, Score_y) %>%  # No surveytype grouping\n    summarise(Count = n(), .groups = 'drop')\n\n  # Remove rows with zero counts to avoid warnings\n  plot_counts_surveytype <- plot_counts_surveytype %>% filter(Count > 0)\n  plot_counts_all <- plot_counts_all %>% filter(Count > 0)\n\n  # Create scatter plots\n  plot1 <- ggplot(plot_counts_surveytype, aes(x = Score_x, y = Score_y)) + \n    geom_jitter(aes(size = Count, color = surveytype), \n                width = 0.3, height = 0.3, alpha = 0.3, na.rm = TRUE) +  \n    labs(title = paste(x_question, \"vs\", y_question),\n         x = x_question,\n         y = y_question) +  \n    scale_size_continuous(limits = c(1, 60), range = c(1, 10), guide = \"none\") +  # Remove count legend\n    scale_color_discrete(name = NULL) +  # Remove color legend title\n    theme_minimal() +\n    theme(\n      legend.position = \"right\",\n      aspect.ratio = 1,\n      plot.title = element_text(size = title_size),  # Title size\n      axis.title.x = element_text(size = axis_size),  # X-axis label size\n      axis.title.y = element_text(size = axis_size),  # Y-axis label size\n      legend.text = element_text(size = legend_size),   # Legend text size\n      legend.spacing.y = unit(0, \"pt\")  # Remove space between surveytype and count\n    )\n\n  plot2 <- ggplot(plot_counts_all, aes(x = Score_x, y = Score_y)) + \n    geom_jitter(aes(size = Count), \n                width = 0.5, height = 0.3, alpha = 0.5, na.rm = TRUE) +  \n    labs(title = paste(x_question, \"vs\", y_question),\n         x = x_question,\n         y = y_question) +  \n    scale_size_continuous(limits = c(1, 60), range = c(1, 10)) +  \n    scale_color_discrete(name = NULL) +  # Remove color legend title\n    theme_minimal() +\n    theme(\n      legend.position = \"right\",\n      aspect.ratio = 1,\n      plot.title = element_text(size = title_size),  # Title size\n      axis.title.x = element_text(size = axis_size),  # X-axis label size\n      axis.title.y = element_text(size = axis_size),  # Y-axis label size\n      legend.text = element_text(size = legend_size)   # Legend text size\n    )\n\n  # Arrange the plots side by side\n  grid.arrange(plot1, plot2, ncol = 2)\n  \n  # Optionally save the plots as separate images\n  suppressMessages({\n    ggsave(filename = paste0(x_question, \"_vs_\", y_question, \"_scatter_plot_by_surveytype.png\"), plot = plot1, width = 8, height = 8)  # Adjust width and height for 2:2 ratio\n    ggsave(filename = paste0(x_question, \"_vs_\", y_question, \"_scatter_plot_all.png\"), plot = plot2, width = 8, height = 8)  # Adjust width and height for 2:2 ratio\n  })\n}\n\n# Example usage\ncreate_scatter_plot_both(\"burnout\", \"priaccess\", title_size = 10, axis_size = 9, legend_size = 8)\n\n\n\n\n```\n\n```{r, echo=FALSE}\nQuestion_LookUp_Professionalism <- read.csv(\"C:/Users/REV47/OneDrive - University of Pittsburgh/Desktop/LEADS Reports/Question Look-Up Professionalism.csv\")\n```\n\n```{r, echo=FALSE}\ncat(\"Creativity\")\n```\n\n```{r, echo=FALSE}\n\ncreate_scatter_plot_two_all(\"creativeperson\", \"priaccess\", \"creativeperson\", \"prioverall\", \n                             x_limits = c(1, 5), y_limits = c(1, 5),\n                             main_title = \"I am a creative person.\") \n                             \n```\n\n```{r, echo=FALSE}\ncat(\"Motivation\")\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wkrecogn\", \"priaccess\", \"wkrecogn\", \"prioverall\",\n                             x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"I am strongly motivated by the recognition I earn from other people.\") \n                             \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wkothfind\", \"priaccess\", \"wkothfind\", \"prioverall\", \n                            x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"I want other people to find out how good I can really be at my work.\") \n                             \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wkbetter\", \"priaccess\", \"wkbetter\", \"prioverall\", \n                             x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"To me, success means doing better than other people.\") \n                             \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wkprom\", \"priaccess\", \"wkprom\", \"prioverall\", \n                             x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"I am keenly aware of the promotion goals I have for myself.\") \n                  \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wkincome\", \"priaccess\", \"wkincome\", \"prioverall\", \n                             x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"I am keenly aware of the income goals I have for myself.\") \n                  \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wkmostej\", \"priaccess\", \"wkmostej\", \"prioverall\",\n                            x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"It is important for me to be able to do what I most enjoy.\") \n                  \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wktackl\", \"priaccess\", \"wktackl\", \"prioverall\", \n                             x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"I enjoy tackling problems that are completely new to me.\") \n                  \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wkcomplex\", \"priaccess\", \"wkcomplex\", \"prioverall\", \n                             x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"I enjoy trying to solve complex problems.\") \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wkdiffic\", \"priaccess\", \"wkdiffic\", \"prioverall\", \n                             x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"The more difficult the problem, the more I enjoy trying to solve it.\") \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wkenjoy\", \"priaccess\", \"wkenjoy\", \"prioverall\", \n                            x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"What matters most to me is enjoying what I do.\") \n```\n\n```{r, echo=FALSE}\ncat(\"Passion and Interests\")\n\n```\n\n```{r, echo=FALSE}\ncat(\"Leadership\")\n\n```\n\n```{r, echo=FALSE}\ncat(\"Research Skills Inventory\")\n\n```\n\n```{r, echo=FALSE}\nkable(Question_LookUp_Professionalism) \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"adaptability\", \"priaccess\", \"adaptability\", \"prioverall\",\n                             x_limits = c(1, 5), y_limits = c(1, 5),\n                             main_title = \"I demonstrate adaptability in responding to changing needs and priorities.\") \n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"criticism\", \"priaccess\", \"criticism\", \"prioverall\",\n                            \n x_limits = c(1, 5), y_limits = c(1, 5),\n                             main_title = \"I respond well to constructive criticism.\") \n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"assistcolleague\", \"priaccess\", \"assistcolleague\", \"prioverall\",\n                             x_limits = c(1, 5), y_limits = c(1, 5),\n                             main_title = \"I offer assistance toward a colleagues\\n professional and personal development.\" )\n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"respect\", \"priaccess\", \"respect\", \"prioverall\",\n                             x_limits = c(1, 5), y_limits = c(1, 5),\n                             main_title = \" I always respect the rights and\\n individuality of thought by colleagues and students.\" )\n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"truthful\", \"priaccess\", \"truthful\", \"prioverall\",\n                             x_limits = c(1, 5), y_limits = c(1, 5),\n                             main_title = \" I always represent information and actions in a truthful way.\" )\n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"discloseCOI\", \"priaccess\", \"discloseCOI\", \"prioverall\",\n                             x_limits = c(1, 5), y_limits = c(1, 5),\n                             main_title = \"I disclose conflicts of interest in\\n the course of professional duties and activities.\" )\n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"avoidoffensive\", \"priaccess\", \"avoidoffensive\", \"prioverall\",\n                             x_limits = c(1, 5), y_limits = c(1, 5),\n                             main_title = \"I avoid offensive speech that offers\\n unkind comments and unfair criticisms to others.\")\n\n```\n\n```{r, echo=FALSE}\ncat(\"For Professionalism, X increases as Y increases.\")\n\n```\n\n```{r, echo=FALSE}\ncat(\"Research Expereince\")\n```\n\n```{r, echo=FALSE}\ncat(\"Networking and Social Capital\")\n```\n\n```{r, echo=FALSE}\nQuestion_LookUp_JobSat <- read.csv(\"C:/Users/REV47/OneDrive - University of Pittsburgh/Desktop/LEADS Reports/Question Look-Up Job Sat.csv\")\n```\n\n```{r, echo=FALSE}\ncat(\"Job satisfaction variable key\")\n\n```\n\n```{r, echo=FALSE}\nkable(Question_LookUp_JobSat)\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"paidfair\", \"priaccess\", \"paidfair\", \"prioverall\",\n                            x_limits = c(1, 7), y_limits = c(1, 5),\n                             main_title = \"I feel I am being paid a fair amount for the work I do.\")\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"compsupervisor\", \"priaccess\", \"compsupervisor\", \"prioverall\",\n                                       x_limits = c(1, 7), y_limits = c(1, 5),\n                             main_title = \"My supervisor is quite competent in doing his/her job.\")\n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"recognition\", \"priaccess\", \"recognition\", \"prioverall\",\n                             x_limits = c(1, 7), y_limits = c(1, 5),\n                             main_title = \"When I do a good job, I receive the recognition for it that I should receive.\")\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"notblocked\", \"priaccess\", \"notblocked\", \"prioverall\",\n                            x_limits = c(1, 7), y_limits = c(1, 5),\n                             main_title = \" My efforts to do a good job are seldom blocked\\n by the rules and procedures of my institution.\")\n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"likecoworkers\", \"priaccess\", \"likecoworkers\", \"prioverall\",\n                              x_limits = c(1, 7), y_limits = c(1, 5),\n                             main_title = \"I like the people I work with.\")\n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"jobmeaningful\", \"priaccess\", \"jobmeaningful\", \"prioverall\",\n                            x_limits = c(1, 7), y_limits = c(1, 5),\n                             main_title = \"I feel my job is meaningful.\")\n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"communications\", \"priaccess\", \"communications\", \"prioverall\",\n                            x_limits = c(1, 7), y_limits = c(1, 5),\n                             main_title = \"Communications are good within this organization.\")\n\n\n```\n\n```{r, echo=FALSE}\ncat(\"Career Satisfaction\")\n```\n\n```{r, echo=FALSE}\ncat(\"Career Adapt-Abilities\")\n```\n","srcMarkdownNoYaml":"\n\n```{r, echo = FALSE}\nALL_data <- read.csv(\"C:/Users/REV47/OneDrive - University of Pittsburgh/Desktop/LEADS Reports/LEADS_all csv.csv\")\n\n```\n\n```{r, echo = FALSE}\n###assign factors\nALL_data$Cohort <- as.factor(ALL_data$Cohort)\n\n```\n\n```{r, echo = FALSE}\n###assign factors\nALL_data$surveytype <- as.factor(ALL_data$surveytype)\n```\n\n```{r, echo = FALSE}\n###assign factors\nALL_data$Question <- as.factor(ALL_data$Question)\n\n```\n\n```{r, echo = FALSE}\n###assign factors\nALL_data$Category <- as.factor(ALL_data$Category)\n```\n\n```{r, echo=FALSE, results='hide'}\n###summary table\nsummary(ALL_data)\n```\n\n```{r, echo =FALSE}\n###convert all columns within df to appropriate data types\nALL_data$SurveyId <- as.factor(ALL_data$SurveyId)\nALL_data$UserId <- as.factor(ALL_data$UserId)\nALL_data$Cohort <- as.factor(ALL_data$Cohort)\nALL_data$SurveyYear <- as.integer(ALL_data$SurveyYear)  \nALL_data$surveytype <- as.factor(ALL_data$surveytype)\nALL_data$Question <- as.character(ALL_data$Question)\nALL_data$Score <- as.numeric(ALL_data$Score)  \nALL_data$Category <- as.factor(ALL_data$Category)\n```\n\n```{r, echo=FALSE}\n###get variable titles\nunique_question_variables <- unique(ALL_data$Question)\n\n\n```\n\n```{r, echo=FALSE, results='hide'}\n#Count occurrences of each question type\nquestion_counts <- table(ALL_data$Question)\n```\n\n```{r, echo=FALSE}\n###assign specific order to surveytype\nALL_data$surveytype <- factor(ALL_data$surveytype, levels = c(\"Baseline\", \"Exit\", \"Alumni\"))\n```\n\n```{r, echo=FALSE}\n###assign specific order to categories\nALL_data$Category <- factor(ALL_data$Category, levels = c(\"burnout\", \"creativity\", \"motivation\", \"passion_and_interest\", \"leadership\", \"rsi\", \"professionalism\", \"research_experience\", \"mentoring\", \"resources\", \"networking\", \"job_satisfaction\", \"career_satisfaction\", \"caa\"))\n```\n\n```{r, echo=FALSE}\nlibrary(stringr)\n\n```\n\n```{r, echo=FALSE}\nwrap_cat <- function(text, width = 80) \n  {wrapped_text <- str_wrap(text, width)\n  cat(wrapped_text, \"\\n\")}\n\n```\n\n```{r, echo=FALSE}\n\nwrap_cat(\"This report observes the potentail impact of mentorship on success factors for LEADS scholars. The outcome X variable of success factors will be compaired against the Y variables 'priaccess' or 'My primary mentor of mentoring team is accessible', and 'prioverall' or 'Please rate the overall effectiveness of your primary mentor.' The data is unaggregated.\")\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n```\n\n```{r, echo=FALSE}\nwrap_cat(\"The LEADS survey has been broken down into subscales that will be assessed in the following order:\")\n    \n   cat(\"\n    Burnout\n    Creativity\n    Motivation\n    Passion and Interests\n    Leadership\n    Research Skills Inventory\n    Professionalism\n    Research Experience\n    Networking/Socail Capital\n    Job Satisfaction\n    Career Satisfaction\n    Career Adapt-Abilities Inventory\")\n```\n\n```{r, echo=FALSE, results='hide'}\nsuppressPackageStartupMessages(library(dplyr))\n\nlibrary(dplyr)\n###Create a descriptive table for the burnout category grouped by SurveyType\nburnout_summary <- ALL_data %>%\n  filter(Category == \"burnout\") %>%\n  group_by(surveytype) %>%  \n  summarise(\n    Count = n(),\n    Mean = mean(Score, na.rm = TRUE),\n    Median = median(Score, na.rm = TRUE),\n    SD = sd(Score, na.rm = TRUE),\n    Min = min(Score, na.rm = TRUE),\n    Max = max(Score, na.rm = TRUE),\n      .groups = 'drop'  # To avoid a grouped data frame output\n  )\n\nprint(burnout_summary)\n\n```\n\n```{r, echo=FALSE}\n\nlibrary(knitr)\n\n```\n\n```{r, echo=FALSE}\n# Define a vector of specific question variables\nquestion_variables <- c(\"activerole\", \"actoninfo\", \"adaptability\", \"agencies\", \"arguments\", \"assembleTeam\", \"assistcolleague\", \"avoidoffensive\", \"awareChoices\", \"beliefs\", \"buildcomm\", \"buildplan\", \"burnout\", \"careerConcern\", \"coaching\",  \"communications\", \"compensation\", \"compsupervisor\", \"countOnSelf\", \"creative\", \"creativeperson\", \"criticism\", \"critiques\", \"curious\", \"dataManager\", \"deepProbing\", \"diffangles\", \"differentWays\", \"direction\", \"discloseCOI\", \"doThingsWell\", \"dynamics\", \"efficient\", \"finer\", \"finish\", \"followupplan\", \"grantStages\",\"grantWriter\", \"hypothesis\", \"influenced\", \"jobmeaningful\", \"launch\", \"learnSkills\", \"likecoworkers\", \"listen\", \"lookToGrow\", \"manageTeam\", \"mentorExpertise\", \"newdistract\", \"newskills\", \"notblocked\", \"notdiscouraged\", \"optionsPrechoice\", \"overcome\", \"paidfair\", \"peerReviewer\", \"planToAchieve\", \"prepareFuture\", \"priaccess\", \"pricareerresp\", \"pricritiq\", \"prilife\", \"primotiv\", \n\"prioverall\", \"priprof\", \"priskills\", \"prisuggestinfl\", \"recognition\", \"reschange\", \"researchAdmin\", \"respect\", \"responsible\", \"rightForSelf\", \"sections\", \"secureMore\", \"selfDecisions\", \"shapeFuture\", \"showtrust\", \"sofield\", \"solveProblems\", \"soother\", \"sopitt\", \"statistician\", \"submitGrant\", \"surroundings\", \"theoretical\", \n\"thinkFuture\", \"timeline\", \"truthful\", \"upbeat\", \"wkbetter\", \"wkcomplex\", \"wkdiffic\", \"wkenjoy\", \"wkincome\", \"wkmostej\", \"wkothfind\", \"wkprom\", \"wkrecogn\", \n\"wktackl\", \"workingUp\", \"writeAbstract\", \"writeMOP\", \"writePaper\") \n```\n\n```{r, echo=FALSE, message=FALSE, fig.show='hide'}\nlibrary(ggplot2)\nlibrary(dplyr)\n\ncreate_scatter_plot_mean <- function(x_question, y_question) {\n  # Check for questions in the dataframe\n  if (!(x_question %in% ALL_data$Question)) stop(\"X-axis question not found.\")\n  if (!(y_question %in% ALL_data$Question)) stop(\"Y-axis question not found.\")\n  \n  # Prepare data\n  x_data <- ALL_data %>% \n    filter(Question == x_question) %>% \n    select(SurveyId, UserId, surveytype, Score) %>% \n    rename(Score_x = Score)\n\n  y_data <- ALL_data %>% \n    filter(Question == y_question) %>% \n    select(SurveyId, UserId, Score) %>% \n    rename(Score_y = Score)\n  \n  # Join data on SurveyId and UserId\n  plot_data <- inner_join(x_data, y_data, by = c(\"SurveyId\", \"UserId\")) \n  \n  # Calculate mean of Score_x and count by surveytype and Score_y\n  plot_counts <- plot_data %>%\n    group_by(surveytype, Score_y) %>%\n    summarise(Mean_x = mean(Score_x, na.rm = TRUE), \n              Count = n(), \n              .groups = 'drop')  # Count occurrences\n\n  # Filter out rows with NA values in Mean_x or Score_y\n  plot_counts <- plot_counts %>%\n    filter(!is.na(Mean_x) & !is.na(Score_y))\n\n  # Define nudge distances\n  nudge_x <- 0.15  # Horizontal spacing\n  nudge_y <- 0.1   # Vertical spacing\n  \n  # Create scatter plot with nudge to maintain symmetry\n  plot <- suppressWarnings({\n    ggplot(plot_counts, aes(x = Mean_x, y = Score_y, color = surveytype)) +\n      geom_point(aes(size = Count), alpha = 0.5, \n                 position = position_nudge(x = nudge_x, y = nudge_y), na.rm = TRUE) +  # Nudge for spacing\n      labs(title = paste(\"Scatter Plot of\", x_question, \"Mean vs\", y_question, \"Raw Scores by Survey Type\"),\n           x = paste(\"Mean of\", x_question),\n           y = y_question,\n           size = \"Count\") +  # Label for size legend\n      theme_minimal()\n  })\n\n  print(plot)\n  \n  # Optionally save the plot, suppressing messages\n  suppressMessages({\n    ggsave(filename = paste0(x_question, \"_vs_\", y_question, \"_scatter_plot_by_surveytype.png\"), plot = plot)\n  })\n}\n\n# Example usage\ncreate_scatter_plot_mean(\"burnout\", \"priaccess\")\n\n\n```\n\n```{r, echo=FALSE}\ncat(\"Burnout\")\n\n```\n\n```{r, echo=FALSE, results='hide'}\nkable(burnout_summary)\n```\n\n```{r, echo=FALSE, results='hide'}\nlibrary(ggplot2)\nlibrary(dplyr)\n\ncreate_scatter_plot_raw <- function(x_question, y_question) {\n  # Check for questions in the dataframe\n  if (!(x_question %in% ALL_data$Question)) stop(\"X-axis question not found.\")\n  if (!(y_question %in% ALL_data$Question)) stop(\"Y-axis question not found.\")\n  \n  # Prepare data for x_question\n  x_data <- ALL_data %>% \n    filter(Question == x_question) %>% \n    select(SurveyId, UserId, surveytype, Score) %>% \n    rename(Score_x = Score)\n\n  # Prepare data for y_question\n  y_data <- ALL_data %>% \n    filter(Question == y_question) %>% \n    select(SurveyId, UserId, Score) %>% \n    rename(Score_y = Score)\n\n  # Join data on SurveyId and UserId\n  plot_data <- inner_join(x_data, y_data, by = c(\"SurveyId\", \"UserId\")) \n  \n  # Filter out rows with NA values\n  plot_data <- plot_data %>% filter(!is.na(Score_x) & !is.na(Score_y))\n\n  # Calculate counts for each combination of raw scores\n  plot_counts <- plot_data %>%\n    group_by(surveytype, Score_x, Score_y) %>%\n    summarise(Count = n(), .groups = 'drop')  # Count occurrences\n  \n  # Remove rows with zero counts to avoid warnings\n  plot_counts <- plot_counts %>%\n    filter(Count > 0)\n\n  # Create scatter plot with jitter to avoid overlap\n  plot <- suppressWarnings({\n    ggplot(plot_counts, aes(x = Score_x, y = Score_y, color = surveytype)) +\n      geom_jitter(aes(size = Count), width = 0.1, height = 0.3, alpha = 0.5, na.rm = TRUE) +  # Use jitter for points\n      labs(title = paste( x_question, \"vs\", y_question),\n           x = paste( x_question),\n           y = paste(y_question),\n           size = \"Count\") +  # Label for size legend\n      theme_minimal() +\n      theme(legend.position = \"right\")  # Adjust legend position as needed\n  })\n\n  # Print the plot\n  suppressWarnings(print(plot))\n  \n  # Optionally save the plot, suppressing messages\n  suppressMessages({\n    ggsave(filename = paste0(x_question, \"_vs_\", y_question, \"_scatter_plot_by_surveytype.png\"), plot = plot)\n  })\n}\n\n\n```\n\n```{r, echo=FALSE, fig.show='hide', results='hide', message=FALSE, warning=FALSE}\nlibrary(ggplot2)\nlibrary(dplyr)\n\ncreate_scatter_plot_all <- function(x_question, y_question) {\n  # Check for questions in the dataframe\n  if (!(x_question %in% ALL_data$Question)) stop(\"X-axis question not found.\")\n  if (!(y_question %in% ALL_data$Question)) stop(\"Y-axis question not found.\")\n  \n  # Prepare data for x_question\n  x_data <- ALL_data %>% \n    filter(Question == x_question) %>% \n    select(SurveyId, UserId, Score) %>% \n    rename(Score_x = Score)\n\n  # Prepare data for y_question\n  y_data <- ALL_data %>% \n    filter(Question == y_question) %>% \n    select(SurveyId, UserId, Score) %>% \n    rename(Score_y = Score)\n\n  # Join data on SurveyId and UserId\n  plot_data <- inner_join(x_data, y_data, by = c(\"SurveyId\", \"UserId\")) \n  \n  # Filter out rows with NA values\n  plot_data <- plot_data %>% filter(!is.na(Score_x) & !is.na(Score_y))\n\n  # Calculate counts for each combination of raw scores\n  plot_counts <- plot_data %>%\n    group_by(Score_x, Score_y) %>% \n    summarise(Count = n(), .groups = 'drop') \n  \n  # Remove rows with zero counts to avoid warnings\n  plot_counts <- plot_counts %>%\n    filter(Count > 0)\n\n  # Get n values\n  n_x <- nrow(x_data)\n  n_y <- nrow(y_data)\n\n  # Create scatter plot without jitter\n  plot <- ggplot(plot_counts, aes(x = Score_x, y = Score_y)) +  \n    geom_point(aes(size = Count), alpha = 0.3) +  # Use points instead of jitter\n    geom_text(aes(label = Count), hjust = -1.0, size = 3, color = \"black\") +  # Adjust position to the right\n    labs(title = paste(x_question, \"vs\", y_question, \"| n_x =\", n_x, \", n_y =\", n_y),\n         x = paste(x_question),\n         y = paste(y_question),\n         size = \"Count\") +  \n    theme_minimal() +\n    theme(legend.position = \"right\", plot.title = element_text(hjust = 0.7))  # Center the title\n\n  # Print the plot\n  print(plot)\n  \n  # Optionally save the plot\n  ggsave(filename = paste0(x_question, \"_vs_\", y_question, \"_scatter_plot.png\"), plot = plot)  \n}\n\n# Example usage\ncreate_scatter_plot_all(\"burnout\", \"priaccess\")\n\n```\n\n```{r, echo=FALSE}\n######create function scatter plot two all\nsuppressPackageStartupMessages({\n  library(ggplot2)\n  library(dplyr)\n  library(gridExtra)  # Load gridExtra for arranging plots\n  library(grid)       # Load grid for textGrob\n})\n\ncreate_scatter_plot_two_all <- function(x_question1, y_question1, x_question2, y_question2, \n                                         x_limits = c(1, 5), y_limits = c(1, 5),  # Add parameters for axis limits\n                                         main_title = \"\", title_size = 10, label_size = 8, text_label_size = 2.6) {\n  # Function to create a scatter plot\n  create_plot <- function(x_question, y_question, color) {\n    if (!(x_question %in% ALL_data$Question)) stop(\"X-axis question not found.\")\n    if (!(y_question %in% ALL_data$Question)) stop(\"Y-axis question not found.\")\n    \n    # Prepare data for x_question\n    x_data <- ALL_data %>% \n      filter(Question == x_question) %>% \n      select(SurveyId, UserId, Score) %>% \n      rename(Score_x = Score)\n\n    # Prepare data for y_question\n    y_data <- ALL_data %>% \n      filter(Question == y_question) %>% \n      select(SurveyId, UserId, Score) %>% \n      rename(Score_y = Score)\n\n    # Join data on SurveyId and UserId\n    plot_data <- inner_join(x_data, y_data, by = c(\"SurveyId\", \"UserId\")) \n    \n    # Filter out rows with NA values\n    plot_data <- plot_data %>% filter(!is.na(Score_x) & !is.na(Score_y))\n\n    # Calculate counts for each combination of raw scores\n    plot_counts <- plot_data %>%\n      group_by(Score_x, Score_y) %>% \n      summarise(Count = n(), .groups = 'drop') \n    \n    # Remove rows with zero counts to avoid warnings\n    plot_counts <- plot_counts %>%\n      filter(Count > 0)\n\n    # Get n values\n    n_x <- nrow(x_data)\n    n_y <- nrow(y_data)\n\n    # Create scatter plot without jitter for points, jittering only text labels\n    plot <- suppressWarnings({\n      ggplot(plot_counts, aes(x = Score_x, y = Score_y)) +  \n        geom_point(aes(size = Count), color = color, alpha = 0.2) +  # Set color based on argument\n        geom_text(aes(label = Count), \n                  position = position_jitter(width = 0.0, height = 0.0),  # Apply jitter to text labels\n                  size = text_label_size, color = \"black\") +  \n        labs(title = paste(x_question, \"vs\", y_question, \"\\n\", \n                           \"n_x =\", n_x, \", n_y =\", n_y),\n             x = paste(x_question),\n             y = paste(y_question),\n             size = \"Count\") +  \n        scale_size_continuous(limits = c(1, 100), range = c(1, 25), guide = \"none\") +  # Lock sizes\n        scale_x_continuous(limits = x_limits) +  # Set x-axis limits\n        scale_y_continuous(limits = y_limits) +  # Set y-axis limits\n        theme_minimal() +\n        theme(legend.position = \"right\", \n              plot.title = element_text(hjust = 0.5, size = title_size, lineheight = 0.8),\n              axis.text.x = element_text(size = label_size, face = \"bold\"),  # Bold x-axis numbers\n              axis.text.y = element_text(size = label_size, face = \"bold\"),  # Bold y-axis numbers\n              axis.title.x = element_text(size = label_size),  # Normal x-axis title\n              axis.title.y = element_text(size = label_size),  # Normal y-axis title\n              aspect.ratio = 1)  # Set aspect ratio to 1\n    })\n\n    return(plot)\n  }\n\n  # Create the two plots with specified colors\n  plot1 <- create_plot(x_question1, y_question1, color = \"blue\")\n  plot2 <- create_plot(x_question2, y_question2, color = \"black\")\n\n  # Arrange the plots side by side with adjusted heights for equal aspect ratio\n  grid.arrange(plot1, plot2, ncol = 2, \n               top = textGrob(main_title, gp = gpar(fontsize = 14, fontface = \"bold\")))  # Use main_title here\n}\n\n# Example usage with customizable main title and axis limits\ncreate_scatter_plot_two_all(\"burnout\", \"priaccess\", \"burnout\", \"prioverall\", \n                             x_limits = c(1, 5), y_limits = c(1, 5),\n                             main_title = \"I am experiencing symptoms of burnout.\")\n```\n\n```{r, echo=FALSE}\nwrap_cat(\"As priaccess scores are higher, burnout scores are lower. On this scale, a lower burnout score is positive.\")\n\n```\n\n```{r, echo=FALSE, fig.show='hide', warning=FALSE}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(gridExtra)  # Load gridExtra for arranging plots\n\ncreate_scatter_plot_both <- function(x_question, y_question, title_size = 14, axis_size = 12, legend_size = 10) {\n  # Check for questions in the dataframe\n  if (!(x_question %in% ALL_data$Question)) stop(\"X-axis question not found.\")\n  if (!(y_question %in% ALL_data$Question)) stop(\"Y-axis question not found.\")\n  \n  # Prepare data for x_question, including surveytype\n  x_data <- ALL_data %>% \n    filter(Question == x_question) %>% \n    select(SurveyId, UserId, surveytype, Score) %>% \n    rename(Score_x = Score)\n\n  # Prepare data for y_question, without surveytype\n  y_data <- ALL_data %>% \n    filter(Question == y_question) %>% \n    select(SurveyId, UserId, Score) %>% \n    rename(Score_y = Score)\n\n  # Join data on SurveyId and UserId\n  plot_data <- inner_join(x_data, y_data, by = c(\"SurveyId\", \"UserId\")) \n  \n  # Filter out rows with NA values\n  plot_data <- plot_data %>% filter(!is.na(Score_x) & !is.na(Score_y))\n\n  # Calculate counts for each combination of raw scores\n  plot_counts_surveytype <- plot_data %>%\n    group_by(surveytype, Score_x, Score_y) %>%\n    summarise(Count = n(), .groups = 'drop')  # Count occurrences\n\n  plot_counts_all <- plot_data %>%\n    group_by(Score_x, Score_y) %>%  # No surveytype grouping\n    summarise(Count = n(), .groups = 'drop')\n\n  # Remove rows with zero counts to avoid warnings\n  plot_counts_surveytype <- plot_counts_surveytype %>% filter(Count > 0)\n  plot_counts_all <- plot_counts_all %>% filter(Count > 0)\n\n  # Create scatter plots\n  plot1 <- ggplot(plot_counts_surveytype, aes(x = Score_x, y = Score_y)) + \n    geom_jitter(aes(size = Count, color = surveytype), \n                width = 0.3, height = 0.3, alpha = 0.3, na.rm = TRUE) +  \n    labs(title = paste(x_question, \"vs\", y_question),\n         x = x_question,\n         y = y_question) +  \n    scale_size_continuous(limits = c(1, 60), range = c(1, 10), guide = \"none\") +  # Remove count legend\n    scale_color_discrete(name = NULL) +  # Remove color legend title\n    theme_minimal() +\n    theme(\n      legend.position = \"right\",\n      aspect.ratio = 1,\n      plot.title = element_text(size = title_size),  # Title size\n      axis.title.x = element_text(size = axis_size),  # X-axis label size\n      axis.title.y = element_text(size = axis_size),  # Y-axis label size\n      legend.text = element_text(size = legend_size),   # Legend text size\n      legend.spacing.y = unit(0, \"pt\")  # Remove space between surveytype and count\n    )\n\n  plot2 <- ggplot(plot_counts_all, aes(x = Score_x, y = Score_y)) + \n    geom_jitter(aes(size = Count), \n                width = 0.5, height = 0.3, alpha = 0.5, na.rm = TRUE) +  \n    labs(title = paste(x_question, \"vs\", y_question),\n         x = x_question,\n         y = y_question) +  \n    scale_size_continuous(limits = c(1, 60), range = c(1, 10)) +  \n    scale_color_discrete(name = NULL) +  # Remove color legend title\n    theme_minimal() +\n    theme(\n      legend.position = \"right\",\n      aspect.ratio = 1,\n      plot.title = element_text(size = title_size),  # Title size\n      axis.title.x = element_text(size = axis_size),  # X-axis label size\n      axis.title.y = element_text(size = axis_size),  # Y-axis label size\n      legend.text = element_text(size = legend_size)   # Legend text size\n    )\n\n  # Arrange the plots side by side\n  grid.arrange(plot1, plot2, ncol = 2)\n  \n  # Optionally save the plots as separate images\n  suppressMessages({\n    ggsave(filename = paste0(x_question, \"_vs_\", y_question, \"_scatter_plot_by_surveytype.png\"), plot = plot1, width = 8, height = 8)  # Adjust width and height for 2:2 ratio\n    ggsave(filename = paste0(x_question, \"_vs_\", y_question, \"_scatter_plot_all.png\"), plot = plot2, width = 8, height = 8)  # Adjust width and height for 2:2 ratio\n  })\n}\n\n# Example usage\ncreate_scatter_plot_both(\"burnout\", \"priaccess\", title_size = 10, axis_size = 9, legend_size = 8)\n\n\n\n\n```\n\n```{r, echo=FALSE}\nQuestion_LookUp_Professionalism <- read.csv(\"C:/Users/REV47/OneDrive - University of Pittsburgh/Desktop/LEADS Reports/Question Look-Up Professionalism.csv\")\n```\n\n```{r, echo=FALSE}\ncat(\"Creativity\")\n```\n\n```{r, echo=FALSE}\n\ncreate_scatter_plot_two_all(\"creativeperson\", \"priaccess\", \"creativeperson\", \"prioverall\", \n                             x_limits = c(1, 5), y_limits = c(1, 5),\n                             main_title = \"I am a creative person.\") \n                             \n```\n\n```{r, echo=FALSE}\ncat(\"Motivation\")\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wkrecogn\", \"priaccess\", \"wkrecogn\", \"prioverall\",\n                             x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"I am strongly motivated by the recognition I earn from other people.\") \n                             \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wkothfind\", \"priaccess\", \"wkothfind\", \"prioverall\", \n                            x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"I want other people to find out how good I can really be at my work.\") \n                             \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wkbetter\", \"priaccess\", \"wkbetter\", \"prioverall\", \n                             x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"To me, success means doing better than other people.\") \n                             \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wkprom\", \"priaccess\", \"wkprom\", \"prioverall\", \n                             x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"I am keenly aware of the promotion goals I have for myself.\") \n                  \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wkincome\", \"priaccess\", \"wkincome\", \"prioverall\", \n                             x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"I am keenly aware of the income goals I have for myself.\") \n                  \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wkmostej\", \"priaccess\", \"wkmostej\", \"prioverall\",\n                            x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"It is important for me to be able to do what I most enjoy.\") \n                  \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wktackl\", \"priaccess\", \"wktackl\", \"prioverall\", \n                             x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"I enjoy tackling problems that are completely new to me.\") \n                  \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wkcomplex\", \"priaccess\", \"wkcomplex\", \"prioverall\", \n                             x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"I enjoy trying to solve complex problems.\") \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wkdiffic\", \"priaccess\", \"wkdiffic\", \"prioverall\", \n                             x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"The more difficult the problem, the more I enjoy trying to solve it.\") \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"wkenjoy\", \"priaccess\", \"wkenjoy\", \"prioverall\", \n                            x_limits = c(0, 3), y_limits = c(1, 5),\n                             main_title = \"What matters most to me is enjoying what I do.\") \n```\n\n```{r, echo=FALSE}\ncat(\"Passion and Interests\")\n\n```\n\n```{r, echo=FALSE}\ncat(\"Leadership\")\n\n```\n\n```{r, echo=FALSE}\ncat(\"Research Skills Inventory\")\n\n```\n\n```{r, echo=FALSE}\nkable(Question_LookUp_Professionalism) \n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"adaptability\", \"priaccess\", \"adaptability\", \"prioverall\",\n                             x_limits = c(1, 5), y_limits = c(1, 5),\n                             main_title = \"I demonstrate adaptability in responding to changing needs and priorities.\") \n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"criticism\", \"priaccess\", \"criticism\", \"prioverall\",\n                            \n x_limits = c(1, 5), y_limits = c(1, 5),\n                             main_title = \"I respond well to constructive criticism.\") \n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"assistcolleague\", \"priaccess\", \"assistcolleague\", \"prioverall\",\n                             x_limits = c(1, 5), y_limits = c(1, 5),\n                             main_title = \"I offer assistance toward a colleagues\\n professional and personal development.\" )\n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"respect\", \"priaccess\", \"respect\", \"prioverall\",\n                             x_limits = c(1, 5), y_limits = c(1, 5),\n                             main_title = \" I always respect the rights and\\n individuality of thought by colleagues and students.\" )\n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"truthful\", \"priaccess\", \"truthful\", \"prioverall\",\n                             x_limits = c(1, 5), y_limits = c(1, 5),\n                             main_title = \" I always represent information and actions in a truthful way.\" )\n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"discloseCOI\", \"priaccess\", \"discloseCOI\", \"prioverall\",\n                             x_limits = c(1, 5), y_limits = c(1, 5),\n                             main_title = \"I disclose conflicts of interest in\\n the course of professional duties and activities.\" )\n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"avoidoffensive\", \"priaccess\", \"avoidoffensive\", \"prioverall\",\n                             x_limits = c(1, 5), y_limits = c(1, 5),\n                             main_title = \"I avoid offensive speech that offers\\n unkind comments and unfair criticisms to others.\")\n\n```\n\n```{r, echo=FALSE}\ncat(\"For Professionalism, X increases as Y increases.\")\n\n```\n\n```{r, echo=FALSE}\ncat(\"Research Expereince\")\n```\n\n```{r, echo=FALSE}\ncat(\"Networking and Social Capital\")\n```\n\n```{r, echo=FALSE}\nQuestion_LookUp_JobSat <- read.csv(\"C:/Users/REV47/OneDrive - University of Pittsburgh/Desktop/LEADS Reports/Question Look-Up Job Sat.csv\")\n```\n\n```{r, echo=FALSE}\ncat(\"Job satisfaction variable key\")\n\n```\n\n```{r, echo=FALSE}\nkable(Question_LookUp_JobSat)\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"paidfair\", \"priaccess\", \"paidfair\", \"prioverall\",\n                            x_limits = c(1, 7), y_limits = c(1, 5),\n                             main_title = \"I feel I am being paid a fair amount for the work I do.\")\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"compsupervisor\", \"priaccess\", \"compsupervisor\", \"prioverall\",\n                                       x_limits = c(1, 7), y_limits = c(1, 5),\n                             main_title = \"My supervisor is quite competent in doing his/her job.\")\n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"recognition\", \"priaccess\", \"recognition\", \"prioverall\",\n                             x_limits = c(1, 7), y_limits = c(1, 5),\n                             main_title = \"When I do a good job, I receive the recognition for it that I should receive.\")\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"notblocked\", \"priaccess\", \"notblocked\", \"prioverall\",\n                            x_limits = c(1, 7), y_limits = c(1, 5),\n                             main_title = \" My efforts to do a good job are seldom blocked\\n by the rules and procedures of my institution.\")\n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"likecoworkers\", \"priaccess\", \"likecoworkers\", \"prioverall\",\n                              x_limits = c(1, 7), y_limits = c(1, 5),\n                             main_title = \"I like the people I work with.\")\n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"jobmeaningful\", \"priaccess\", \"jobmeaningful\", \"prioverall\",\n                            x_limits = c(1, 7), y_limits = c(1, 5),\n                             main_title = \"I feel my job is meaningful.\")\n\n```\n\n```{r, echo=FALSE}\ncreate_scatter_plot_two_all(\"communications\", \"priaccess\", \"communications\", \"prioverall\",\n                            x_limits = c(1, 7), y_limits = c(1, 5),\n                             main_title = \"Communications are good within this organization.\")\n\n\n```\n\n```{r, echo=FALSE}\ncat(\"Career Satisfaction\")\n```\n\n```{r, echo=FALSE}\ncat(\"Career Adapt-Abilities\")\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"LEADS_clean_new.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.555","editor":"visual","title":"LEADS bivariate analysis - Mentorship","author":"Rebecca Voropaeff"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":[]}